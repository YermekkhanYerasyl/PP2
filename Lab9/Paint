import pygame


def main():
    pygame.init()
    screen = pygame.display.set_mode((640, 480))
    clock = pygame.time.Clock()
    
    radius = 15
    mode = 'blue'
    tool = 'pen'  # 'pen', 'circle', 'rect', 'eraser', 'right_triangle', 'equilateral_triangle', 'rhombus'
    points = []
    start_pos = None
    background = pygame.Surface(screen.get_size())
    background.fill((0, 0, 0))
    
    while True:
        pressed = pygame.key.get_pressed()
        
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                return
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    return
                
                # Change color
                if event.key == pygame.K_r:
                    mode = 'red'
                elif event.key == pygame.K_g:
                    mode = 'green'
                elif event.key == pygame.K_b:
                    mode = 'blue'
                elif event.key == pygame.K_y:
                    mode = 'yellow'
                elif event.key == pygame.K_w:
                    mode = 'white'
                elif event.key == pygame.K_e:
                    mode = 'black'
                
                # Change tool
                if event.key == pygame.K_e:
                    tool = 'eraser'
                elif event.key == pygame.K_c:
                    tool = 'circle'
                elif event.key == pygame.K_t:
                    tool = 'rect'
                elif event.key == pygame.K_p:
                    tool = 'pen'
                elif event.key == pygame.K_v:
                    tool = 'right_triangle'
                elif event.key == pygame.K_q:
                    tool = 'equilateral_triangle'
                elif event.key == pygame.K_h:
                    tool = 'rhombus'
            
            if event.type == pygame.MOUSEBUTTONDOWN:
                if event.button == 1:  # Left click
                    if tool in ['circle', 'rect', 'right_triangle', 'equilateral_triangle', 'rhombus']:
                        start_pos = event.pos
                    else:
                        pygame.draw.circle(background, (0, 0, 0) if tool == 'eraser' else get_color(mode), event.pos, radius)
                elif event.button == 3:  # Right click (change brush size)
                    radius = max(1, radius - 1) if pygame.key.get_mods() & pygame.KMOD_SHIFT else min(200, radius + 1)
            
            if event.type == pygame.MOUSEMOTION and tool == 'pen':
                pygame.draw.circle(background, get_color(mode), event.pos, radius)
                
            if event.type == pygame.MOUSEMOTION and tool == 'eraser':
                pygame.draw.circle(background, get_color(mode), event.pos, radius)
            
            if event.type == pygame.MOUSEBUTTONUP:
                if tool in ['circle', 'rect', 'right_triangle', 'equilateral_triangle', 'rhombus'] and start_pos:
                    end_pos = event.pos
                    draw_shape(background, start_pos, end_pos, tool, mode)
        
        screen.blit(background, (0, 0))
        pygame.display.flip()
        clock.tick(60)
        

def get_color(color_mode):
    colors = {
        'blue': (0, 0, 255),
        'red': (255, 0, 0),
        'green': (0, 255, 0),
        'yellow': (255, 255, 0),
        'white': (255, 255, 255),
        'black' : (0 , 0 , 0)
    }
    return colors.get(color_mode, (255, 255, 255))

def draw_shape(screen, start, end, tool, color):
    color = get_color(color)
    if tool == 'circle':
        center = ((start[0] + end[0]) // 2, (start[1] + end[1]) // 2)
        radius = max(abs(start[0] - end[0]) // 2, abs(start[1] - end[1]) // 2)
        pygame.draw.circle(screen, color, center, radius, 2)
    elif tool == 'rect':
        rect = pygame.Rect(start, (end[0] - start[0], end[1] - start[1]))
        pygame.draw.rect(screen, color, rect, 2)
    elif tool == 'right_triangle':
        pygame.draw.polygon(screen, color, [start, (start[0], end[1]), end], 2)
    elif tool == 'equilateral_triangle':
        height = abs(end[1] - start[1])
        midpoint = ((start[0] + end[0]) // 2, start[1])
        pygame.draw.polygon(screen, color, [midpoint, (start[0], end[1]), (end[0], end[1])], 2)
    elif tool == 'rhombus':
        width = abs(end[0] - start[0]) // 2
        height = abs(end[1] - start[1]) // 2
        center = ((start[0] + end[0]) // 2, (start[1] + end[1]) // 2)
        pygame.draw.polygon(screen, color, [(center[0] - width, center[1]), (center[0], center[1] - height), (center[0] + width, center[1]), (center[0], center[1] + height)], 2)
        
main()
