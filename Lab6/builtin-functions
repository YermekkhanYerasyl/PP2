from functools import reduce
import time
import math

# 1. Multiply all numbers in a list using a built-in function
def multiply_list(numbers):
    return reduce(lambda x, y: x * y, numbers)

# 2. Count uppercase and lowercase letters in a string
def count_case(s):
    upper_case = sum(1 for c in s if c.isupper())
    lower_case = sum(1 for c in s if c.islower())
    return {"Uppercase": upper_case, "Lowercase": lower_case}

# 3. Check if a string is a palindrome
def is_palindrome(s):
    return s == s[::-1]

# 4. Invoke square root function after specific milliseconds
def delayed_sqrt(number, delay):
    time.sleep(delay / 1000)  # Convert milliseconds to seconds
    return math.sqrt(number)

# 5. Check if all elements in a tuple are true
def all_true(t):
    return all(t)

if __name__ == "__main__":
    print(multiply_list([1, 2, 3, 4]))
    print(count_case("Hello World!")) 
    print(is_palindrome("madam"))
    num, delay_ms = 25100, 2123
    print(f"Square root of {num} after {delay_ms} milliseconds is {delayed_sqrt(num, delay_ms)}")
    print(all_true((True, True, False)))















def multi(l):
    reduce(lambda x , y: x * y )